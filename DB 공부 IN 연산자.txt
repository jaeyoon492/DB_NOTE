IN 연산자

~ 안에 

특정 집합(컴럼 혹은 리스트)에서 특정 집합 혹은 리스트가 존재하는지 판단하는 연산자 이다.
--------------------------------------------------------------------------------------------------------

IN 연산자 문법

SELECT
	*
FROM
	TABLE_NAME
WHERE 
	COLUMN_NAME IN (VALUE1, VALUE2, ...) 		//COLUMN_NAME이 가지고 있는 집합에서 VALUE1,VALUE2등의
;							//값이 존재 하는지 확인


---------------------------------------------------------------------------------------------------------------------------------

SELECT
	*
FROM
	TABLE_NAME
WHERE 
	COLIMN_NAME IN
	(SELECT COLUMN_NAME2  FROM TABLE_NAME2)	//COLUMN_NAME이 가지고 있는 집합에서 TABLE_NAME2
;							//테이블의 COLUMN_NAME2의 집합이 존재하는지 확인

---------------------------------------------------------------------------------------------------------------------------------

IN을 사용하는 이유: 
1. 가독성, 알아보기 쉽다.
2. (DBMS 최적화기,SQL최적화) 옵티마이저의 특성상 IN조건이 성능상 유리할때가 많다.

----------------------------------------------------------------------------------------------------------------------------------

NOT IN 연산자

SELECT
	  CUSTOMER_ID ,
	  RENTAL_ID ,
	  RETURN_DATE
FROM
	  rental r
WHERE
	  CUSTOMER_ID NOT IN(1, 2)	--CUSTOMER_ID가 1도 아니고 2도 아닌 행을 출력한다. 
					--그 결과를 RETURN_DATE 컬럼 내림차순으로 출력한다.
ORDER BY RETURN_DATE DESC;

--------------------------------------------------------------------------------------------------------------------------------------

--NOT IN 연산자 -AND 사용

SELECT
	CUSTOMER_ID ,
	RENTAL_ID ,
	RETURN_DATE
FROM
	rental r					
WHERE
	CUSTOMER_ID <> 1		--CUSTOMER_ID가 1도아니고 2도 아닌 행을 출력한다.
     AND CUSTOMER_ID <> 2
ORDER BY RETURN_DATE DESC;		--그 결과를 RETURN_DATE컬럼 내림차순으로 출력한다.